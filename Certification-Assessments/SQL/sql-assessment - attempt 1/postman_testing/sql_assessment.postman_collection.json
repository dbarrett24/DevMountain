{
	"id": "b3b693cb-43f2-bbe9-0034-0541c0b18366",
	"name": "sql_assessment",
	"description": "",
	"order": [
		"d49b275f-3c16-1f46-8578-c44c473c9434",
		"bc56057b-cfa6-12a1-6627-d6eda573cbac",
		"4827c7d0-cd1a-16c9-e1b9-6ef4b3d4bdd1",
		"24fe3539-778d-74db-c07a-84f593aa8044",
		"8cd5fb16-7ac7-6538-cf45-ffc02e363b51",
		"2a0a3629-6c4d-6540-fa94-701df2977c7f",
		"0c2bc224-24cf-f85c-762a-8be9ce425f60",
		"fc2f6ffb-2317-d8f6-817a-ec933bc8e476",
		"da86e5b9-29ca-bf17-564d-dce430f28089",
		"8babc0f3-6d86-3a1e-11c4-5e4e7fad3e28",
		"6c6d0721-dc89-f2e0-923d-a087f86d5edc",
		"47e7feca-30b3-02b6-97cf-735f5a1754a0",
		"8ea22176-68a2-b83e-17f4-b706782706c3",
		"d921fcd0-c37e-8a96-eb4f-1bf3564dadc3",
		"031deb19-f963-0175-9bf6-301ee1fb3041",
		"7aaa30e7-7c16-5c4d-42ac-1282cc849223",
		"0e7a54d7-acae-7a46-6351-1c7d454bb47c",
		"d2a06fa9-f25f-010e-9613-15bb530be9a1"
	],
	"folders": [],
	"timestamp": 1495178094388,
	"owner": "1954071",
	"public": false,
	"requests": [
		{
			"id": "031deb19-f963-0175-9bf6-301ee1fb3041",
			"headers": "",
			"url": "localhost:3000/api/user/1/vehicle/3",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "const res = JSON.parse(responseBody);\nconst users = JSON.parse(postman.getGlobalVariable('users'));\nconst vehicles = JSON.parse(postman.getGlobalVariable('vehicles'));\n\nconst vehicle = vehicles.filter( v => v.id === 3 );\nvehicle[0].owner_id = null;\n\nlet flag = true;\nfor(let key in vehicle[0]) {\n    if(vehicle[0][key] !== res[0][key]) flag = false;\n}\n\ntests['Owner removed from correct vehicle'] = flag;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1496673505320,
			"name": "DELETE - Remove Ownership - #11",
			"description": "",
			"collectionId": "b3b693cb-43f2-bbe9-0034-0541c0b18366",
			"responses": []
		},
		{
			"id": "0c2bc224-24cf-f85c-762a-8be9ce425f60",
			"headers": "",
			"headerData": [],
			"url": "localhost:3000/api/user/2/vehicle",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "const vehicles = JSON.parse(postman.getGlobalVariable('vehicles'));\nconst res = JSON.parse(responseBody);\nconst vehiclesArr = [vehicles[3], vehicles[4]];\nlet flag = true;\nfor (let i = 0; i < vehiclesArr.length; i++) {\n    if (vehiclesArr[i].id !== res[i].id || vehiclesArr[i].make !== res[i].make) {\n        flag = false;\n    }\n}\n\nlet userFlag = true;\nres.forEach( v => {\n    if (v.hasOwnProperty('name') || v.hasOwnProperty('email')) {\n        userFlag = false;\n    }\n})\n\ntests['Only vehicle information returned, no user info'] = userFlag;\ntests['Correct array of vehicle objects returned'] = flag && vehiclesArr.length === res.length;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1497303015046,
			"name": "GET - Vehicles By User Id - #6",
			"description": "",
			"collectionId": "b3b693cb-43f2-bbe9-0034-0541c0b18366",
			"responses": []
		},
		{
			"id": "0e7a54d7-acae-7a46-6351-1c7d454bb47c",
			"headers": "",
			"url": "localhost:3000/api/vehicle/6",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"tests": "const res = JSON.parse(responseBody);\nconst vehicles = JSON.parse(postman.getGlobalVariable('vehicles'));\n\nconst removedVehicle = vehicles.filter( v => v.id === 6 );\n\nlet flag = true;\nfor (let key in removedVehicle[0]) {\n    if (removedVehicle[0][key] !== res[0][key]) flag = false;\n}\n\ntests['Correct vehicle deleted'] = flag && res.length === removedVehicle.length;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1496684381226,
			"name": "DELETE - Vehicle By Id - #12",
			"description": "",
			"collectionId": "b3b693cb-43f2-bbe9-0034-0541c0b18366",
			"responses": []
		},
		{
			"id": "24fe3539-778d-74db-c07a-84f593aa8044",
			"headers": "Content-Type: application/json\n",
			"url": "localhost:3000/api/vehicles",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "const res = JSON.parse(responseBody);\n\ntests['Vehicle object added AND returned'] = res[0].id === 7 && res[0].make === \"Ford\" && res[0].owner_id === 3;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1497049254320,
			"name": "POST - Add Vehicle - #4",
			"description": "",
			"collectionId": "b3b693cb-43f2-bbe9-0034-0541c0b18366",
			"responses": [],
			"rawModeData": "{\n\t\"make\": \"Ford\",\n\t\"model\": \"Mustang\",\n\t\"year\": 1969,\n\t\"owner_id\": 3\n}"
		},
		{
			"id": "2a0a3629-6c4d-6540-fa94-701df2977c7f",
			"headers": "",
			"url": "localhost:3000/api/user/2/vehiclecount",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "const res = JSON.parse(responseBody);\n\ntests['Correct count returned for user'] = res[0].count == 2;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1496355829832,
			"name": "GET - Count Of Cars By Id - #5",
			"description": "",
			"collectionId": "b3b693cb-43f2-bbe9-0034-0541c0b18366",
			"responses": []
		},
		{
			"id": "47e7feca-30b3-02b6-97cf-735f5a1754a0",
			"headers": "",
			"headerData": [],
			"url": "localhost:3000/api/newervehiclesbyyear",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "const res = JSON.parse(responseBody);\nconst users = JSON.parse(postman.getGlobalVariable('users'));\nconst vehicles = JSON.parse(postman.getGlobalVariable('vehicles'));\nlet vehiclesArr = vehicles.filter( v => v.year > 2000 ).sort((a,b)=> b.year - a.year);\n\nlet flag = true;\nfor (let i = 0; i < vehiclesArr.length; i++) {\n    if (vehiclesArr[i].model !== res[i].model) flag = false;\n}\nlet userFlag = true;\nres.forEach( v => {\n    if (!v.hasOwnProperty('name') || v.hasOwnProperty('email')) {\n        userFlag = false;\n    }\n})\n\ntests['Vehilcle owner\\'s name (only) included with vehicle info'] = userFlag;\n\ntests['Correct vehicles returned, newer than 2000'] = flag && vehiclesArr.length === res.length;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1497469545819,
			"name": "GET - Vehicles By Year - #9",
			"description": "",
			"collectionId": "b3b693cb-43f2-bbe9-0034-0541c0b18366",
			"responses": []
		},
		{
			"id": "4827c7d0-cd1a-16c9-e1b9-6ef4b3d4bdd1",
			"headers": "Content-Type: application/json\n",
			"url": "localhost:3000/api/users",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "const res = JSON.parse(responseBody);\n\ntests['User object added to users table AND returned'] = res[0].id === 4 && res[0].name === 'Arthur Curry' && res[0].email === 'marine.life@aqua.com';",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1495733203644,
			"name": "POST - Add User - #3",
			"description": "",
			"collectionId": "b3b693cb-43f2-bbe9-0034-0541c0b18366",
			"responses": [],
			"rawModeData": "{\n\t\"name\": \"Arthur Curry\",\n\t\"email\": \"marine.life@aqua.com\"\n}"
		},
		{
			"id": "6c6d0721-dc89-f2e0-923d-a087f86d5edc",
			"headers": "",
			"headerData": [],
			"url": "localhost:3000/api/vehicle?userFirstStart=Da",
			"queryParams": [
				{
					"key": "userFirstStart",
					"value": "Da",
					"equals": true,
					"description": "",
					"enabled": true
				}
			],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "const res = JSON.parse(responseBody);\nconst users = JSON.parse(postman.getGlobalVariable('users'));\nconst vehicles = JSON.parse(postman.getGlobalVariable('vehicles'));\nconst ownerIds = users.filter(user => user.name[0] === 'D' && user.name[1] === 'a');\nfunction ownerTest(id) {\n    let flag = false;\n    for (let i = 0; i < ownerIds.length; i++) {\n        if (ownerIds[i].id == id) flag = true;\n    }\n    return flag;\n}\nconst vehiclesArr = vehicles.filter(v => ownerTest(v.owner_id));\nlet flag = true;\nfor (let i = 0; i < vehiclesArr.length; i++) {\n    if (vehiclesArr[i].id !== res[i].id) flag = false\n}\nlet userFlag = true;\nres.forEach( v => {\n    if (v.hasOwnProperty('name') || v.hasOwnProperty('email')) {\n        userFlag = false;\n    }\n})\n\ntests['Only vehicle information returned, no user info'] = userFlag;\ntests['Vehicles returned based on letters \"Da\"'] = vehiclesArr.length === res.length && flag;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1497307082331,
			"name": "GET - Vehicles By Letters - #8",
			"description": "",
			"collectionId": "b3b693cb-43f2-bbe9-0034-0541c0b18366",
			"responses": []
		},
		{
			"id": "7aaa30e7-7c16-5c4d-42ac-1282cc849223",
			"headers": "",
			"url": "localhost:3000/api/user/2/vehicle/5",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "const res = JSON.parse(responseBody);\nconst users = JSON.parse(postman.getGlobalVariable('users'));\nconst vehicles = JSON.parse(postman.getGlobalVariable('vehicles'));\n\nconst vehicle = vehicles.filter( v => v.id === 5 );\nvehicle[0].owner_id = null;\n\nlet flag = true;\nfor(let key in vehicle[0]) {\n    if(vehicle[0][key] !== res[0][key]) flag = false;\n}\n\ntests['Owner removed from correct vehicle'] = flag;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1496673520829,
			"name": "DELETE - Remove Ownership - #11",
			"description": "",
			"collectionId": "b3b693cb-43f2-bbe9-0034-0541c0b18366",
			"responses": []
		},
		{
			"id": "8babc0f3-6d86-3a1e-11c4-5e4e7fad3e28",
			"headers": "",
			"headerData": [],
			"url": "localhost:3000/api/vehicle?userFirstStart=Jo",
			"queryParams": [
				{
					"key": "userFirstStart",
					"value": "Jo",
					"equals": true,
					"description": "",
					"enabled": true
				}
			],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "const res = JSON.parse(responseBody);\nconst users = JSON.parse(postman.getGlobalVariable('users'));\nconst vehicles = JSON.parse(postman.getGlobalVariable('vehicles'));\nconst ownerIds = users.filter(user => user.name[0] === 'J' && user.name[1] === 'o');\nfunction ownerTest(id) {\n    let flag = false;\n    for (let i = 0; i < ownerIds.length; i++) {\n        if (ownerIds[i].id == id) flag = true;\n    }\n    return flag;\n}\nconst vehiclesArr = vehicles.filter(v => ownerTest(v.owner_id));\nlet flag = true;\nfor (let i = 0; i < vehiclesArr.length; i++) {\n    if (vehiclesArr[i].id !== res[i].id) flag = false\n}\nlet userFlag = true;\nres.forEach( v => {\n    if (v.hasOwnProperty('name') || v.hasOwnProperty('email')) {\n        userFlag = false;\n    }\n})\n\ntests['Only vehicle information returned, no user info'] = userFlag;\ntests['Vehicles returned based on letters \"Jo\"'] = vehiclesArr.length === res.length && flag;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1497307079992,
			"name": "GET - Vehicles By Letters - #8",
			"description": "",
			"collectionId": "b3b693cb-43f2-bbe9-0034-0541c0b18366",
			"responses": []
		},
		{
			"id": "8cd5fb16-7ac7-6538-cf45-ffc02e363b51",
			"headers": "",
			"headerData": [],
			"url": "localhost:3000/api/user/1/vehiclecount",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "const res = JSON.parse(responseBody);\n\ntests['Correct count returned for user'] = res[0].count == 3;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1497302668312,
			"name": "GET - Count Of Cars By Id - #5",
			"description": "",
			"collectionId": "b3b693cb-43f2-bbe9-0034-0541c0b18366",
			"responses": []
		},
		{
			"id": "8ea22176-68a2-b83e-17f4-b706782706c3",
			"headers": "",
			"url": "localhost:3000/api/vehicle/2/user/3",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "PUT",
			"data": null,
			"dataMode": "params",
			"tests": "const res = JSON.parse(responseBody);\nconst users = JSON.parse(postman.getGlobalVariable('users'));\nconst vehicles = JSON.parse(postman.getGlobalVariable('vehicles'));\n\nconst vehicleToUpdate = vehicles.filter(v=>v.id === 2);\nvehicleToUpdate[0].owner_id = 3\nconst updatedVehicle = vehicleToUpdate[0];\nlet flag = true;\n for(let key in res[0]) {\n     if (res[0][key] !== updatedVehicle[key]) flag = false;\n }\n \n tests['Updated owner on vehicle object'] = flag && res.length === vehicleToUpdate.length;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1496670710768,
			"name": "PUT - Update Vehicle Owner - #10",
			"description": "",
			"collectionId": "b3b693cb-43f2-bbe9-0034-0541c0b18366",
			"responses": []
		},
		{
			"id": "bc56057b-cfa6-12a1-6627-d6eda573cbac",
			"headers": "",
			"url": "localhost:3000/api/vehicles",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "const vehicle_data = [\n  {\n    \"id\": 1,\n    \"make\": \"Toyota\",\n    \"model\": \"Camry\",\n    \"year\": 1991,\n    \"owner_id\": 1\n  },\n  {\n    \"id\": 2,\n    \"make\": \"Honda\",\n    \"model\": \"Civic\",\n    \"year\": 1995,\n    \"owner_id\": 1\n  },\n  {\n    \"id\": 3,\n    \"make\": \"Ford\",\n    \"model\": \"Focus\",\n    \"year\": 2005,\n    \"owner_id\": 1\n  },\n  {\n    \"id\": 4,\n    \"make\": \"Ford\",\n    \"model\": \"Taurus\",\n    \"year\": 2003,\n    \"owner_id\": 2\n  },\n  {\n    \"id\": 5,\n    \"make\": \"VW\",\n    \"model\": \"Bug\",\n    \"year\": 2010,\n    \"owner_id\": 2\n  },\n  {\n    \"id\": 6,\n    \"make\": \"Mini\",\n    \"model\": \"Cooper\",\n    \"year\": 2013,\n    \"owner_id\": 3\n  }\n];\npostman.setGlobalVariable('vehicles', JSON.stringify(vehicle_data));\nconst vehicles = JSON.parse(postman.getGlobalVariable('vehicles'));\nconst res = JSON.parse(responseBody);\nlet flag = true;\nfor (let i = 0; i < vehicles.length; i++){\n    if(vehicles[i].id !== res[i].id) {\n        flag = false;\n    }\n}\n\ntests['Array of vehicle objects returned'] = flag && res.length === vehicles.length;\n\n\n\n\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1496352782904,
			"name": "GET - All Vehicles - #2",
			"description": "",
			"collectionId": "b3b693cb-43f2-bbe9-0034-0541c0b18366",
			"responses": []
		},
		{
			"id": "d2a06fa9-f25f-010e-9613-15bb530be9a1",
			"headers": "",
			"url": "localhost:3000/api/vehicle/4",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "b3b693cb-43f2-bbe9-0034-0541c0b18366",
			"data": null,
			"dataMode": "params",
			"name": "DELETE - Vehicle By Id - #12",
			"description": "",
			"descriptionFormat": "html",
			"time": 1496990146347,
			"version": 2,
			"responses": [],
			"tests": "const res = JSON.parse(responseBody);\nconst vehicles = JSON.parse(postman.getGlobalVariable('vehicles'));\n\nconst removedVehicle = vehicles.filter( v => v.id === 4 );\n\nlet flag = true;\nfor (let key in removedVehicle[0]) {\n    if (removedVehicle[0][key] !== res[0][key]) flag = false;\n}\n\ntests['Correct vehicle deleted'] = flag && res.length === removedVehicle.length;",
			"currentHelper": "normal",
			"helperAttributes": {}
		},
		{
			"id": "d49b275f-3c16-1f46-8578-c44c473c9434",
			"headers": "",
			"url": "localhost:3000/api/users",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "const user_data = [\n  {\n    \"id\": 1,\n    \"name\": \"John Smith\",\n    \"email\": \"John@Smith.com\"\n  },\n  {\n    \"id\": 2,\n    \"name\": \"Dave Davis\",\n    \"email\": \"Dave@Davis.com\"\n  },\n  {\n    \"id\": 3,\n    \"name\": \"Jane Janis\",\n    \"email\": \"Jane@Janis.com\"\n  }\n];\n\npostman.setGlobalVariable(\"users\", JSON.stringify(user_data));\nconst users = JSON.parse(postman.getGlobalVariable('users'));\nconst res = JSON.parse(responseBody);\nlet flag = true;\nfor (let i = 0; i < users.length; i++) {\n    if (users[i].name !== res[i].name) {\n        flag = false;\n    }\n}\n\ntests['Array of all user objects returned'] = flag && res.length === users.length;\n\n\n\n\n\n\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1495179526918,
			"name": "GET - All Users -  #1",
			"description": "",
			"collectionId": "b3b693cb-43f2-bbe9-0034-0541c0b18366",
			"responses": []
		},
		{
			"id": "d921fcd0-c37e-8a96-eb4f-1bf3564dadc3",
			"headers": "",
			"url": "localhost:3000/api/vehicle/1/user/2",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "PUT",
			"data": null,
			"dataMode": "params",
			"tests": "const res = JSON.parse(responseBody);\nconst users = JSON.parse(postman.getGlobalVariable('users'));\nconst vehicles = JSON.parse(postman.getGlobalVariable('vehicles'));\n\nconst vehicleToUpdate = vehicles.filter(v=>v.id === 1);\nvehicleToUpdate[0].owner_id = 2\nconst updatedVehicle = vehicleToUpdate[0];\nlet flag = true;\n for(let key in res[0]) {\n     if (res[0][key] !== updatedVehicle[key]) flag = false;\n }\n \n tests['Updated owner on vehicle object'] = flag && res.length === vehicleToUpdate.length;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1496670767546,
			"name": "PUT - Update Vehicle Owner - #10",
			"description": "",
			"collectionId": "b3b693cb-43f2-bbe9-0034-0541c0b18366",
			"responses": []
		},
		{
			"id": "da86e5b9-29ca-bf17-564d-dce430f28089",
			"headers": "",
			"headerData": [],
			"url": "localhost:3000/api/vehicle?userEmail=dave@davis.com",
			"queryParams": [
				{
					"key": "userEmail",
					"value": "dave@davis.com",
					"equals": true,
					"description": "",
					"enabled": true
				}
			],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "const res = JSON.parse(responseBody);\nconst users = JSON.parse(postman.getGlobalVariable('users'));\nconst vehicles = JSON.parse(postman.getGlobalVariable('vehicles'));\n\nconst vehiclesArr =  vehicles.filter(v=>v.owner_id === 2);\nlet flag = true;\nfor (let i = 0; i > vehiclesArr.length; i++) {\n   if (vehiclesArr[i].id !== res[i].id) flag = false;\n}\n\nlet userFlag = true;\nres.forEach( v => {\n    if (v.hasOwnProperty('name') || v.hasOwnProperty('email')) {\n        userFlag = false;\n    }\n})\n\ntests['Only vehicle information returned, no user info'] = userFlag;\ntests['Correct vehicle objects returned'] = flag && vehiclesArr.length === res.length;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1497303330588,
			"name": "GET - Vehicles By Email - #7",
			"description": "",
			"collectionId": "b3b693cb-43f2-bbe9-0034-0541c0b18366",
			"responses": []
		},
		{
			"id": "fc2f6ffb-2317-d8f6-817a-ec933bc8e476",
			"headers": "",
			"headerData": [],
			"url": "localhost:3000/api/vehicle?userEmail=john@smith.com",
			"queryParams": [
				{
					"key": "userEmail",
					"value": "john@smith.com",
					"equals": true,
					"description": "",
					"enabled": true
				}
			],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "const res = JSON.parse(responseBody);\nconst users = JSON.parse(postman.getGlobalVariable('users'));\nconst vehicles = JSON.parse(postman.getGlobalVariable('vehicles'));\n\nconst vehiclesArr =  vehicles.filter(v=>v.owner_id === 1);\nlet flag = true;\nfor (let i = 0; i > vehiclesArr.length; i++) {\n   if (vehiclesArr[i].id !== res[i].id) flag = false;\n}\n\nlet userFlag = true;\nres.forEach( v => {\n    if (v.hasOwnProperty('name') || v.hasOwnProperty('email')) {\n        userFlag = false;\n    }\n})\n\ntests['Only vehicle information returned, no user info'] = userFlag;\ntests['Correct vehicle objects returned'] = flag && vehiclesArr.length === res.length;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1497303332435,
			"name": "GET - Vehicles By Email - #7",
			"description": "",
			"collectionId": "b3b693cb-43f2-bbe9-0034-0541c0b18366",
			"responses": []
		}
	]
}